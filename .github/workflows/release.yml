# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Auto-release

on:
  push:
    branches: [ "main" ]

jobs:
  build-release-macos:
    runs-on: macos-latest

    permissions:
        contents: write

    steps:

    - name: Set shared library info
      run: |
        echo LIBDIR="/Users/runner/Library/Caches/tree-sitter/lib" >> $GITHUB_ENV
        echo LIBNAME="css_in_js.so" >> $GITHUB_ENV
        echo PLATFORM="osx" >> $GITHUB_ENV

    - name: Get Node.js ${{ matrix.node-version }}
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Build and test
      run: |
        npm ci
        npm run build --if-present
        npm run test
        
    - name: Create tarball
      uses: a7ul/tar-action@v1.1.0
      with:
        command: c
        cwd: ${{ env.LIBDIR }}
        files: |
          ${{ env.LIBNAME }}
        outPath: "/Users/runner/${{ env.PLATFORM }}.tar.gz"


  build-release-linux:
    runs-on: ubuntu-latest

    permissions:
        contents: write

    steps:

    - name: Set shared library info
      run: |
        echo LIBDIR="/home/runner/.cache/tree-sitter/lib" >> $GITHUB_ENV
        echo LIBNAME="css_in_js.so" >> $GITHUB_ENV
        echo PLATFORM="linux" >> $GITHUB_ENV

    - name: Get Node.js ${{ matrix.node-version }}
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Build and test
      run: |
        npm ci
        npm run build --if-present
        npm run test
        
    - name: Create tarball
      uses: a7ul/tar-action@v1.1.0
      with:
        command: c
        cwd: ${{ env.LIBDIR }}
        files: |
          ${{ env.LIBNAME }}
        outPath: "/home/runner/${{ env.PLATFORM }}.tar.gz"


  build-release-windows:
    runs-on: windows-latest

    permissions:
        contents: write

    steps:

    - name: Set shared library info
      run: |
        echo LIBDIR="C:\\Users\\runner\\AppData\\Local\\tree-sitter\\lib" >> $GITHUB_ENV
        echo LIBNAME="css_in_js.dll" >> $GITHUB_ENV
        echo PLATFORM="windows" >> $GITHUB_ENV
        cat $GITHUB_ENV

    - name: Get Node.js ${{ matrix.node-version }}
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Build and test
      run: |
        npm ci
        npm run build --if-present
        npm run test
        
    - name: Create tarball
      uses: a7ul/tar-action@v1.1.0
      with:
        command: c
        cwd: ${{ env.LIBDIR }}
        files: |
          ${{ env.LIBNAME }}
        outPath: "C:\\Users\\runner\\${{ env.PLATFORM }}.tar.gz"
